name: Java CI with Gradle

on:
  push:
    tags:
      - 'release*'

env:
  project: ujon

jobs:
  config:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      short_sha: ${{steps.vars.outputs.short_sha}}
      image_tag: ${{steps.vars.outputs.image_tag}}
      api_image_name: ${{steps.vars.outputs.api_image_name}}
    steps:
      - name: Set custom variables
        id: vars
        run: |
          short_sha=${GITHUB_SHA::6}
          image_tag=${GITHUB_REF_NAME}-${short_sha}
          api_image_name=ghcr.io/${{github.repository}}/api:${image_tag}

          echo "short_sha=${short_sha}" >> $GITHUB_OUTPUT
          echo "image_tag=${image_tag}" >> $GITHUB_OUTPUT
          echo "api_image_name=${api_image_name}" >> $GITHUB_OUTPUT
      - name: Check all variables
        run: |
          echo "github.repository: ${{github.repository}}"
          echo "github.repository_owner: ${{github.repository_owner}}"
          echo "github.sha: ${{github.sha}}"
          echo "github.ref_name: ${{github.ref_name}}"
          echo "secrets.GHCR_TOKEN: ${{secrets.GHCR_TOKEN}}"
          echo "env.project: ${{env.project}}"
          echo "env.short_sha: ${{env.short_sha}}"
          echo "env.image_tag: ${{env.image_tag}}"
          echo "env.api_image_name: ${{env.api_image_name}}"

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle Wrapper
        run: ./gradlew :ujon-api:build

      - name: Build jar
        if: success()
        run: ./gradlew :ujon-api:bootJar

      - name: Upload jar as artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ujon-api-jar
          path: |
            ujon-api/build/libs/
            ujon-api/Dockerfile
  packaging:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: [ build, config ]
    steps:
      - name: Download jar artifact
        uses: actions/download-artifact@v4
        with:
          name: ujon-api-jar
          path: ujon-api/

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build Docker image
        run: docker build -f ./ujon-api/Dockerfile -t ${{needs.config.outputs.api_image_name}} .

      - name: Push Docker image to GitHub Container Registry
        run: docker push ${{needs.config.outputs.api_image_name}}
  deploy:
    runs-on: ubuntu-latest
    needs: [ packaging, config ]
    steps:
      - name: Configure SSH
        env:
          SSH_USER: ${{ vars.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ vars.SSH_HOST }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/production.key
          chmod 600 ~/.ssh/production.key
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/production.key
            StrictHostKeyChecking no
          END
      - name: Deploy
        run: |
          ssh -T production << EOF
            cd /Users/ujon/Desktop/project/ujon-server
            sed -i '' 's|^TAG=.*$|TAG=${{ needs.config.outputs.image_tag }} |' .env
            sh start.sh
          EOF
          
          
          
          
          
